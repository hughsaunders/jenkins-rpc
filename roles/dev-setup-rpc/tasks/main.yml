---
- name: Add ssh keys
  tags: rpc
  copy: >
    src={{item}}
    dest=~/.ssh/{{item|basename}}
  with_fileglob:
    - id_*

- name: Create /var/creds
  file:
    path: /var/creds
    state: directory

- name: Drop cloud10 openrc (for glance-swift)
  copy:
    src: /var/creds/cloud10
    dest: /var/creds/cloud10

- name: Install pip requirements
  tags: rpc
  pip: requirements=~/{{rpc_repo_dir}}/requirements.txt

- name: Install turbolift
  pip:
    name: turbolift

- name: test if rpc_deployment dir exists
  shell: test -f ~/{{rpc_repo_dir}}/rpc_deploy
  register: rpc_deploy_exists
  failed_when: false

- name: set prefix
  set_fact:
    os_ansible_prefix: 'rpc'
  when: rpc_deploy_exists|success

- name: set prefix
  set_fact:
    os_ansible_prefix: 'openstack'
  when: rpc_deploy_exists|failed


- name: Copy rpc_deploy directory
  tags: rpc
  command: >
    cp -a ~/{{rpc_repo_dir}}/etc/{{os_ansible_prefix}}_deploy ~/{{os_ansible_prefix}}_deploy
    creates=~/{{os_ansible_prefix}}_deploy

- name: Remove swift aio config
  file: 
    path: ~/{{os_ansible_prefix}}_deploy/conf.d/swift.yml
    state: absent

- name: Set environment_md5 fact for template
  tags: rpc
  stat: >
    path=~/{{os_ansible_prefix}}_deploy/{{os_ansible_prefix}}_environment.yml
  register: st

- name: Set facts for template
  tags: rpc
  set_fact:
    cluster_hosts: "{{groups[hosts]}}"
    environment_md5: "{{st.stat.md5}}"

- name: Render rpc_user_config template
  tags: rpc
  template: >
    src=rpc_user_config.yml
    dest=~/{{os_ansible_prefix}}_deploy/{{os_ansible_prefix}}_user_config.yml

- name: Render ansible.cfg template
  template:
    src: ansible.cfg.j2
    dest: ~/{{rpc_repo_dir}}/playbooks/ansible.cfg

- name: Generate passphrases
  tags: rpc
  command: >
    ~/{{rpc_repo_dir}}/scripts/pw-token-gen.py --file ~/{{os_ansible_prefix}}_deploy/user_variables.yml

- name: Clear glance swift container
  tags: rpc
  shell: ". /var/creds/cloud10; turbolift delete -c jenkins_cluster_{{cluster_number}}"

- name: Set user variables
  tags: rpc
  lineinfile:
    dest: ~/{{os_ansible_prefix}}_deploy/user_variables.yml
    regexp: "^{{item.key}}"
    line: "{{item.key}}: {{item.value}}"
  with_items:
    - key: glance_default_store
      value: swift

    - key: rackspace_cloud_auth_url
      value: "{{lookup('env', 'OS_AUTH_URL')}}"

    - key: rackspace_cloud_tenant_id
      value: "{{lookup('env', 'OS_TENANT_NAME')}}"

    - key: rackspace_cloud_username
      value: "{{lookup('env', 'OS_USERNAME')}}"

    - key: rackspace_cloud_password
      value: "{{lookup('env', 'OS_PASSWORD')}}"

    - key: rackspace_cloud_api_key
      value: "{{lookup('env', 'OS_API_KEY')}}"

    - key: glance_swift_store_container
      value: "jenkins_cluster_{{cluster_number}}"

    - key: glance_swift_store_endpoint_type
      value: publicURL

    - key: glance_swift_store_region
      value: "{{lookup('env', 'OS_REGION_NAME')}}"

    - key: haproxy_timeout
      value: "300s"

    - key: virt_type
      value: kvm

    - key: container_start_timeout
      value: 600

- name: "template target.sh on host[0]"
  tags: rpc
  template:
    src: target.sh.j2
    dest: "~/target.sh"
    mode: 0755

- name: Dump host[0] IP to local file
  tags: rpc
  delegate_to: localhost
  copy: >
    content={{ansible_ssh_host}}
    dest=~/target.ip

- name: Drop ansible timestamp callback plugin
  tags: rpc
  copy:
    src: timestamp.py
    dest: /usr/local/lib/python2.7/dist-packages/ansible/callback_plugins/timestamp.py
